[{"C:\\Users\\Lenovo\\Desktop\\my-reddit-clone\\src\\index.js":"1","C:\\Users\\Lenovo\\Desktop\\my-reddit-clone\\src\\App.js":"2","C:\\Users\\Lenovo\\Desktop\\my-reddit-clone\\src\\Components\\Context\\AuthContext.js":"3","C:\\Users\\Lenovo\\Desktop\\my-reddit-clone\\src\\Components\\Firebase\\firebase.js":"4","C:\\Users\\Lenovo\\Desktop\\my-reddit-clone\\src\\Components\\Navbar\\Navbar.jsx":"5","C:\\Users\\Lenovo\\Desktop\\my-reddit-clone\\src\\Components\\Context\\GeneralContext.js":"6","C:\\Users\\Lenovo\\Desktop\\my-reddit-clone\\src\\Components\\Reusables\\PostComponent\\Post.jsx":"7","C:\\Users\\Lenovo\\Desktop\\my-reddit-clone\\src\\Components\\Reusables\\PostActionsComponent\\PostActions.jsx":"8","C:\\Users\\Lenovo\\Desktop\\my-reddit-clone\\src\\Components\\SignUpComponent\\SignUp.jsx":"9","C:\\Users\\Lenovo\\Desktop\\my-reddit-clone\\src\\Components\\Home\\Home.jsx":"10","C:\\Users\\Lenovo\\Desktop\\my-reddit-clone\\src\\Components\\LogInComponent\\Login.jsx":"11","C:\\Users\\Lenovo\\Desktop\\my-reddit-clone\\src\\Components\\CreatePostComponent\\CreatePost.jsx":"12","C:\\Users\\Lenovo\\Desktop\\my-reddit-clone\\src\\Components\\SinglePost\\SinglePost.jsx":"13","C:\\Users\\Lenovo\\Desktop\\my-reddit-clone\\src\\Components\\SinglePost\\SinglePostComments\\SinglePostComments.jsx":"14","C:\\Users\\Lenovo\\Desktop\\my-reddit-clone\\src\\Components\\SinglePost\\SinglePostMain\\SinglePostMain.jsx":"15"},{"size":441,"mtime":1607611560683,"results":"16","hashOfConfig":"17"},{"size":993,"mtime":1607604795807,"results":"18","hashOfConfig":"17"},{"size":1086,"mtime":1607607867938,"results":"19","hashOfConfig":"17"},{"size":627,"mtime":1607513550593,"results":"20","hashOfConfig":"17"},{"size":2273,"mtime":1607606957910,"results":"21","hashOfConfig":"17"},{"size":524,"mtime":1607459877923,"results":"22","hashOfConfig":"17"},{"size":2109,"mtime":1607598210331,"results":"23","hashOfConfig":"17"},{"size":1359,"mtime":1607595246842,"results":"24","hashOfConfig":"17"},{"size":2401,"mtime":1607595762544,"results":"25","hashOfConfig":"17"},{"size":1049,"mtime":1607605322317,"results":"26","hashOfConfig":"17"},{"size":1429,"mtime":1607519179403,"results":"27","hashOfConfig":"17"},{"size":3142,"mtime":1607683571331,"results":"28","hashOfConfig":"17"},{"size":475,"mtime":1607606259225,"results":"29","hashOfConfig":"17"},{"size":685,"mtime":1607607101847,"results":"30","hashOfConfig":"17"},{"size":2848,"mtime":1607621331842,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"4wge5a",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"34"},"C:\\Users\\Lenovo\\Desktop\\my-reddit-clone\\src\\index.js",[],["65","66"],"C:\\Users\\Lenovo\\Desktop\\my-reddit-clone\\src\\App.js",[],"C:\\Users\\Lenovo\\Desktop\\my-reddit-clone\\src\\Components\\Context\\AuthContext.js",[],"C:\\Users\\Lenovo\\Desktop\\my-reddit-clone\\src\\Components\\Firebase\\firebase.js",[],"C:\\Users\\Lenovo\\Desktop\\my-reddit-clone\\src\\Components\\Navbar\\Navbar.jsx",[],"C:\\Users\\Lenovo\\Desktop\\my-reddit-clone\\src\\Components\\Context\\GeneralContext.js",[],"C:\\Users\\Lenovo\\Desktop\\my-reddit-clone\\src\\Components\\Reusables\\PostComponent\\Post.jsx",[],"C:\\Users\\Lenovo\\Desktop\\my-reddit-clone\\src\\Components\\Reusables\\PostActionsComponent\\PostActions.jsx",[],"C:\\Users\\Lenovo\\Desktop\\my-reddit-clone\\src\\Components\\SignUpComponent\\SignUp.jsx",[],"C:\\Users\\Lenovo\\Desktop\\my-reddit-clone\\src\\Components\\Home\\Home.jsx",[],"C:\\Users\\Lenovo\\Desktop\\my-reddit-clone\\src\\Components\\LogInComponent\\Login.jsx",[],"C:\\Users\\Lenovo\\Desktop\\my-reddit-clone\\src\\Components\\CreatePostComponent\\CreatePost.jsx",["67","68"],"C:\\Users\\Lenovo\\Desktop\\my-reddit-clone\\src\\Components\\SinglePost\\SinglePost.jsx",[],"C:\\Users\\Lenovo\\Desktop\\my-reddit-clone\\src\\Components\\SinglePost\\SinglePostComments\\SinglePostComments.jsx",["69","70"],"import React, { useEffect, useState } from 'react'\r\nimport { db } from \"../../Firebase/firebase\"\r\n\r\n\r\nconst SinglePostComments = ({postID}) => {\r\n  const [comments, setComments] = useState([])\r\n\r\n  useEffect(() => {\r\n    db.collection('comments').where(\"parentID\", \"==\", postID).onSnapshot(snapshot => {\r\n      setComments(snapshot.docs.map( \r\n        doc => \r\n        (\r\n          {\r\n            comment: doc.data()\r\n          }\r\n        )\r\n        \r\n      ))\r\n    })\r\n\r\n  },[])\r\n\r\n  return (\r\n    <section className=\"single-post-comments\">\r\n      <div className=\"single-post-comments__container\">\r\n        \r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default SinglePostComments\r\n","C:\\Users\\Lenovo\\Desktop\\my-reddit-clone\\src\\Components\\SinglePost\\SinglePostMain\\SinglePostMain.jsx",["71","72","73","74","75"],"import React, { useContext, useEffect, useState } from 'react'\r\nimport {useParams, Link} from 'react-router-dom'\r\nimport { AuthContext } from '../../Context/AuthContext'\r\nimport { ThemeContext } from '../../Context/GeneralContext'\r\n\r\nimport { db } from '../../Firebase/firebase'\r\n\r\n\r\n\r\nconst SinglePostMain = () => {\r\n  const {currentUser} = useContext(AuthContext)\r\n  const {darkTheme} = useContext(ThemeContext)\r\n  const { postID } = useParams()\r\n\r\n\r\n  let reqPost\r\n  let posts = []\r\n\r\n  const [title, setTitle] = useState('')\r\n  const [displayName, setDisplayName] = useState('')\r\n  const [para, setPara] = useState('')\r\n  const [imageURL, setImageURL] = useState('')\r\n  const [subPlatform, setSubPlatform] = useState('')\r\n\r\n  \r\n\r\n  const fetchData = () => {\r\n    db.collection('posts').get()\r\n      .then(res => {\r\n        res.docs.map((doc) => {\r\n\r\n          if(doc.id === postID){\r\n            posts.push(doc.data())\r\n\r\n\r\n\r\n            setPara(posts[0].para)\r\n            setTitle(posts[0].title)\r\n            setDisplayName(posts[0].displayName)\r\n            setSubPlatform(posts[0].subPlatform)\r\n            \r\n          }\r\n        })\r\n      })\r\n\r\n  }\r\n\r\n  // FOR GETTING THE DETAILS OF THE POST\r\n  useEffect(() => {\r\n    fetchData()\r\n    \r\n    return fetchData\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <section className={`post ${darkTheme ? \"\" : \"light\"}`}>\r\n      <div className=\"post__container\">\r\n\r\n        <div className=\"post__container__post-user-details\">\r\n          <div className=\"post__container__post-user-details__avatar\">\r\n            {imageURL ? (\r\n              <img src={imageURL} alt=\"user\"/>\r\n            ) : (\r\n              <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSrDJ5-IKojn4Rn2dlrRjCzDUjJ8G-TYuh0Aw&usqp=CAU\" alt=\"user\" />\r\n            )}\r\n          </div>\r\n        \r\n          <div className=\"post__container__post-user-details__col\">\r\n\r\n            <div className=\"post__container__post-user-details__col__platform\">\r\n              <Link to={`/platform/${subPlatform}`}>\r\n                <h5>TDP/{subPlatform}</h5>\r\n              </Link>\r\n            </div>\r\n\r\n            <div className=\"post__container__post-user-details__col__username\">\r\n              <h6>By u/{displayName}</h6>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"post__container__post-details\">\r\n\r\n          <div className=\"post__container__post-details__heading\">\r\n              <h1 className=\"post__container__post-details__heading-heading\">\r\n                {title}\r\n              </h1>\r\n          </div>\r\n\r\n          <div className=\"post__container__post-details__para\">\r\n            <p className=\"post__container__post-details__para-para\">\r\n              {para}\r\n            </p>\r\n          </div>\r\n\r\n        </div>\r\n\r\n\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default SinglePostMain\r\n",{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":27,"column":30,"nodeType":"82","messageId":"83","endLine":27,"endColumn":32},{"ruleId":"84","severity":1,"message":"85","line":28,"column":23,"nodeType":"86","messageId":"87","endLine":28,"endColumn":25},{"ruleId":"88","severity":1,"message":"89","line":6,"column":10,"nodeType":"90","messageId":"91","endLine":6,"endColumn":18},{"ruleId":"92","severity":1,"message":"93","line":21,"column":5,"nodeType":"94","endLine":21,"endColumn":7,"suggestions":"95"},{"ruleId":"88","severity":1,"message":"96","line":11,"column":10,"nodeType":"90","messageId":"91","endLine":11,"endColumn":21},{"ruleId":"88","severity":1,"message":"97","line":16,"column":7,"nodeType":"90","messageId":"91","endLine":16,"endColumn":14},{"ruleId":"88","severity":1,"message":"98","line":22,"column":20,"nodeType":"90","messageId":"91","endLine":22,"endColumn":31},{"ruleId":"80","severity":1,"message":"99","line":30,"column":28,"nodeType":"82","messageId":"100","endLine":30,"endColumn":30},{"ruleId":"92","severity":1,"message":"101","line":53,"column":6,"nodeType":"94","endLine":53,"endColumn":8,"suggestions":"102"},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'comments' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'postID'. Either include it or remove the dependency array.","ArrayExpression",["105"],"'currentUser' is assigned a value but never used.","'reqPost' is defined but never used.","'setImageURL' is assigned a value but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["106"],"no-global-assign","no-unsafe-negation",{"desc":"107","fix":"108"},{"desc":"109","fix":"110"},"Update the dependencies array to be: [postID]",{"range":"111","text":"112"},"Update the dependencies array to be: [fetchData]",{"range":"113","text":"114"},[476,478],"[postID]",[1275,1277],"[fetchData]"]